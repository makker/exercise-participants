service: participants-api

custom:
  tableName: 'participants-table-${self:provider.stage}'
  dynamodb:
    start:
      migrate: true

provider:
  name: aws
  runtime: nodejs6.10
  stage: dev
  region: eu-central-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["ParticiantsDynamoDBTable", "Arn" ] }
  environment:
    PARTICIPANTS_TABLE: ${self:custom.tableName}

functions:

  helloRoot:
    handler: index.helloRoot
    events:
      - http: ANY /
        cors: true
      - http: 'ANY {proxy+}'
        cors: true

  createParticipant:
    handler: index.create_a_participant
    events:
      - http: 
          method: post
          path: api/participants
          cors: true
      
  getParticipants:
    handler: index.list_all_participants
    events:
      - http: 
          method: get
          path: api/participants
          cors: true    # This doesn't seem to work in current case 
                        # (maybe because express server?)
                        # Maybe this does the API Gateway cors settings
                        # See https://github.com/serverless/serverless/blob/master/docs/providers/aws/guide/serverless.yml.md

  getParticipant:
    handler: index.read_a_participant
    events:
      - http: 
          method: get
          path: api/participants/{participantId}
          cors: true

  updateParticipant:
    handler: index.update_a_participant
    events:
      - http: 
          method: put
          path: api/participants/{participantId}
          cors: true

  deleteParticipant:
    handler: index.delete_a_participant
    events:
      - http: 
          method: delete
          path: api/participants/{participantId}
          cors: true

resources:
  Resources:
    ParticiantsDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: _id
            AttributeType: S
        KeySchema:
          -
            AttributeName: _id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}

plugins:
  - serverless-dynamodb-local
  - serverless-offline #serverless-offline needs to be last in the list